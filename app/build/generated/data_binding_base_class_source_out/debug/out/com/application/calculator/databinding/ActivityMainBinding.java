// Generated by view binder compiler. Do not edit!
package com.application.calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.application.calculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ScrollView ScrollView01;

  @NonNull
  public final TableRow SecondRow;

  @NonNull
  public final Button add;

  @NonNull
  public final TextView answerBox;

  @NonNull
  public final ImageView backspace;

  @NonNull
  public final Button clear;

  @NonNull
  public final Button cos;

  @NonNull
  public final Button divide;

  @NonNull
  public final Button e;

  @NonNull
  public final Button eight;

  @NonNull
  public final Button equalTo;

  @NonNull
  public final Button exponent;

  @NonNull
  public final TextView expressionBox;

  @NonNull
  public final TableRow firstRow;

  @NonNull
  public final Button five;

  @NonNull
  public final Button four;

  @NonNull
  public final Button ln;

  @NonNull
  public final Button log;

  @NonNull
  public final Button multiply;

  @NonNull
  public final Button nine;

  @NonNull
  public final Button one;

  @NonNull
  public final Button parenthesis;

  @NonNull
  public final Button pi;

  @NonNull
  public final Button plusMinus;

  @NonNull
  public final Button point;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final Button seven;

  @NonNull
  public final Button sin;

  @NonNull
  public final Button six;

  @NonNull
  public final Button subtract;

  @NonNull
  public final Button tan;

  @NonNull
  public final TableLayout tbl;

  @NonNull
  public final Button three;

  @NonNull
  public final Button two;

  @NonNull
  public final Button zero;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull ScrollView ScrollView01,
      @NonNull TableRow SecondRow, @NonNull Button add, @NonNull TextView answerBox,
      @NonNull ImageView backspace, @NonNull Button clear, @NonNull Button cos,
      @NonNull Button divide, @NonNull Button e, @NonNull Button eight, @NonNull Button equalTo,
      @NonNull Button exponent, @NonNull TextView expressionBox, @NonNull TableRow firstRow,
      @NonNull Button five, @NonNull Button four, @NonNull Button ln, @NonNull Button log,
      @NonNull Button multiply, @NonNull Button nine, @NonNull Button one,
      @NonNull Button parenthesis, @NonNull Button pi, @NonNull Button plusMinus,
      @NonNull Button point, @NonNull RelativeLayout relativeLayout, @NonNull Button seven,
      @NonNull Button sin, @NonNull Button six, @NonNull Button subtract, @NonNull Button tan,
      @NonNull TableLayout tbl, @NonNull Button three, @NonNull Button two, @NonNull Button zero) {
    this.rootView = rootView;
    this.ScrollView01 = ScrollView01;
    this.SecondRow = SecondRow;
    this.add = add;
    this.answerBox = answerBox;
    this.backspace = backspace;
    this.clear = clear;
    this.cos = cos;
    this.divide = divide;
    this.e = e;
    this.eight = eight;
    this.equalTo = equalTo;
    this.exponent = exponent;
    this.expressionBox = expressionBox;
    this.firstRow = firstRow;
    this.five = five;
    this.four = four;
    this.ln = ln;
    this.log = log;
    this.multiply = multiply;
    this.nine = nine;
    this.one = one;
    this.parenthesis = parenthesis;
    this.pi = pi;
    this.plusMinus = plusMinus;
    this.point = point;
    this.relativeLayout = relativeLayout;
    this.seven = seven;
    this.sin = sin;
    this.six = six;
    this.subtract = subtract;
    this.tan = tan;
    this.tbl = tbl;
    this.three = three;
    this.two = two;
    this.zero = zero;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ScrollView ScrollView01 = (ScrollView) rootView;

      id = R.id.SecondRow;
      TableRow SecondRow = ViewBindings.findChildViewById(rootView, id);
      if (SecondRow == null) {
        break missingId;
      }

      id = R.id.add;
      Button add = ViewBindings.findChildViewById(rootView, id);
      if (add == null) {
        break missingId;
      }

      id = R.id.answerBox;
      TextView answerBox = ViewBindings.findChildViewById(rootView, id);
      if (answerBox == null) {
        break missingId;
      }

      id = R.id.backspace;
      ImageView backspace = ViewBindings.findChildViewById(rootView, id);
      if (backspace == null) {
        break missingId;
      }

      id = R.id.clear;
      Button clear = ViewBindings.findChildViewById(rootView, id);
      if (clear == null) {
        break missingId;
      }

      id = R.id.cos;
      Button cos = ViewBindings.findChildViewById(rootView, id);
      if (cos == null) {
        break missingId;
      }

      id = R.id.divide;
      Button divide = ViewBindings.findChildViewById(rootView, id);
      if (divide == null) {
        break missingId;
      }

      id = R.id.e;
      Button e = ViewBindings.findChildViewById(rootView, id);
      if (e == null) {
        break missingId;
      }

      id = R.id.eight;
      Button eight = ViewBindings.findChildViewById(rootView, id);
      if (eight == null) {
        break missingId;
      }

      id = R.id.equalTo;
      Button equalTo = ViewBindings.findChildViewById(rootView, id);
      if (equalTo == null) {
        break missingId;
      }

      id = R.id.exponent;
      Button exponent = ViewBindings.findChildViewById(rootView, id);
      if (exponent == null) {
        break missingId;
      }

      id = R.id.expressionBox;
      TextView expressionBox = ViewBindings.findChildViewById(rootView, id);
      if (expressionBox == null) {
        break missingId;
      }

      id = R.id.firstRow;
      TableRow firstRow = ViewBindings.findChildViewById(rootView, id);
      if (firstRow == null) {
        break missingId;
      }

      id = R.id.five;
      Button five = ViewBindings.findChildViewById(rootView, id);
      if (five == null) {
        break missingId;
      }

      id = R.id.four;
      Button four = ViewBindings.findChildViewById(rootView, id);
      if (four == null) {
        break missingId;
      }

      id = R.id.ln;
      Button ln = ViewBindings.findChildViewById(rootView, id);
      if (ln == null) {
        break missingId;
      }

      id = R.id.log;
      Button log = ViewBindings.findChildViewById(rootView, id);
      if (log == null) {
        break missingId;
      }

      id = R.id.multiply;
      Button multiply = ViewBindings.findChildViewById(rootView, id);
      if (multiply == null) {
        break missingId;
      }

      id = R.id.nine;
      Button nine = ViewBindings.findChildViewById(rootView, id);
      if (nine == null) {
        break missingId;
      }

      id = R.id.one;
      Button one = ViewBindings.findChildViewById(rootView, id);
      if (one == null) {
        break missingId;
      }

      id = R.id.parenthesis;
      Button parenthesis = ViewBindings.findChildViewById(rootView, id);
      if (parenthesis == null) {
        break missingId;
      }

      id = R.id.pi;
      Button pi = ViewBindings.findChildViewById(rootView, id);
      if (pi == null) {
        break missingId;
      }

      id = R.id.plusMinus;
      Button plusMinus = ViewBindings.findChildViewById(rootView, id);
      if (plusMinus == null) {
        break missingId;
      }

      id = R.id.point;
      Button point = ViewBindings.findChildViewById(rootView, id);
      if (point == null) {
        break missingId;
      }

      id = R.id.relative_layout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.seven;
      Button seven = ViewBindings.findChildViewById(rootView, id);
      if (seven == null) {
        break missingId;
      }

      id = R.id.sin;
      Button sin = ViewBindings.findChildViewById(rootView, id);
      if (sin == null) {
        break missingId;
      }

      id = R.id.six;
      Button six = ViewBindings.findChildViewById(rootView, id);
      if (six == null) {
        break missingId;
      }

      id = R.id.subtract;
      Button subtract = ViewBindings.findChildViewById(rootView, id);
      if (subtract == null) {
        break missingId;
      }

      id = R.id.tan;
      Button tan = ViewBindings.findChildViewById(rootView, id);
      if (tan == null) {
        break missingId;
      }

      id = R.id.tbl;
      TableLayout tbl = ViewBindings.findChildViewById(rootView, id);
      if (tbl == null) {
        break missingId;
      }

      id = R.id.three;
      Button three = ViewBindings.findChildViewById(rootView, id);
      if (three == null) {
        break missingId;
      }

      id = R.id.two;
      Button two = ViewBindings.findChildViewById(rootView, id);
      if (two == null) {
        break missingId;
      }

      id = R.id.zero;
      Button zero = ViewBindings.findChildViewById(rootView, id);
      if (zero == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, ScrollView01, SecondRow, add, answerBox,
          backspace, clear, cos, divide, e, eight, equalTo, exponent, expressionBox, firstRow, five,
          four, ln, log, multiply, nine, one, parenthesis, pi, plusMinus, point, relativeLayout,
          seven, sin, six, subtract, tan, tbl, three, two, zero);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
